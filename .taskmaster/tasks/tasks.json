{
  "master": {
    "tasks": [
      {
        "id": 1,
        "title": "프레임워크 선정 및 초기 프로젝트 세팅",
        "description": "정적 사이트 중심(Next.js/Astro/SvelteKit 중 선택)으로 레포/호스팅 환경에 맞춰 결정. TypeScript, ESLint, Prettier, 경로 구조, 환경변수 템플릿(.env.example) 구성.",
        "details": "- 후보 비교 및 결정 기준 기록\n- TypeScript 초기 설정(tsconfig)\n- ESLint/Prettier 설정 및 스크립트\n- src/ 디렉토리 구조, 공통 컴포넌트/레이아웃 폴더 구성\n- 개발 서버 실행 확인",
        "testStrategy": "",
        "status": "done",
        "dependencies": [],
        "priority": "high",
        "subtasks": []
      },
      {
        "id": 2,
        "title": "디자인 시스템/레이아웃 기초 구축",
        "description": "글로벌 레이아웃 헤더/푸터/그리드, 컬러/타이포 스케일, 간단한 테마 토글(선택)",
        "details": "- 공통 레이아웃 컴포넌트\n- 브레이크포인트/그리드 시스템\n- 다크/라이트 토글(선택)\n- 기본 접근성 지침 반영",
        "testStrategy": "",
        "status": "done",
        "dependencies": [],
        "priority": "medium",
        "subtasks": []
      },
      {
        "id": 3,
        "title": "콘텐츠 스키마 정의 및 더미 데이터 준비",
        "description": "Project/Post/Profile 스키마 정의 및 Markdown 더미 콘텐츠 작성",
        "details": "- Project: id,title,summary,description(md),techTags[],period,thumbnail,links,featured\n- Post: id,title,slug,content(md),tags[],date,cover\n- Profile: name,title,bio,skills[],socials,resumeUrl\n- /content 디렉토리 구성 및 샘플",
        "testStrategy": "",
        "status": "done",
        "dependencies": [],
        "priority": "medium",
        "subtasks": []
      },
      {
        "id": 4,
        "title": "홈 페이지(MVP) 구현",
        "description": "대표 프로젝트 하이라이트 섹션과 핵심 CTA 구성",
        "details": "- 히어로 섹션(한 줄 소개, CTA)\n- 대표 프로젝트 3~6개 그리드\n- 최근 글(선택)\n- 성능 최적화(LCP 이미지)",
        "testStrategy": "",
        "status": "done",
        "dependencies": [],
        "priority": "medium",
        "subtasks": []
      },
      {
        "id": 5,
        "title": "프로젝트 목록/필터/검색",
        "description": "프로젝트 카드 리스트 + 태그/텍스트 필터",
        "details": "- 태그 필터(멀티 선택)\n- 텍스트 검색(제목/요약)\n- 정렬(최신/추천)\n- 빈 상태/로딩 상태 UI",
        "testStrategy": "",
        "status": "done",
        "dependencies": [],
        "priority": "medium",
        "subtasks": [
          {
            "id": 1,
            "title": "프로젝트 섹션 리스트 템플릿 확인 및 데이터 구조 파악",
            "description": "현재 projects 섹션의 리스트 레이아웃/콘텐츠 메타 구조 확인",
            "details": "",
            "status": "done",
            "dependencies": [],
            "parentTaskId": 5
          },
          {
            "id": 2,
            "title": "클라이언트 사이드 검색/필터 UI 추가",
            "description": "프로젝트 목록 상단에 검색 인풋과 태그 필터 버튼 추가 (Hugo 템플릿 + JS)",
            "details": "",
            "status": "done",
            "dependencies": [],
            "parentTaskId": 5
          },
          {
            "id": 3,
            "title": "필터 로직 구현",
            "description": "프로젝트 카드 데이터(JSON 스니펫) 생성 또는 DOM 기반 필터링 구현",
            "details": "",
            "status": "done",
            "dependencies": [],
            "parentTaskId": 5
          },
          {
            "id": 4,
            "title": "모바일 반응형 및 접근성 점검",
            "description": "키보드 탐색, 라벨링, 색 대비 확인",
            "details": "",
            "status": "done",
            "dependencies": [],
            "parentTaskId": 5
          }
        ]
      },
      {
        "id": 6,
        "title": "프로젝트 상세 페이지",
        "description": "문제/역할/성과/기술/스크린샷/데모 링크 포함 상세 뷰",
        "details": "- Markdown 렌더링 및 이미지 최적화\n- 이전/다음 프로젝트 내비게이션\n- 공유 메타/OG 이미지",
        "testStrategy": "",
        "status": "done",
        "dependencies": [],
        "priority": "medium",
        "subtasks": []
      },
      {
        "id": 7,
        "title": "소개(About) 페이지 + 이력서 링크",
        "description": "한 줄 소개, 상세 이력 요약, 다운로드 가능한 이력서 링크",
        "details": "- 소셜 링크 컴포넌트(GitHub/LinkedIn/Email)\n- 이력서 PDF 업로드/링크\n- 키 스킬 배지",
        "testStrategy": "",
        "status": "done",
        "dependencies": [],
        "priority": "medium",
        "subtasks": []
      },
      {
        "id": 8,
        "title": "연락(Contact) 폼 구현",
        "description": "스팸 방지와 제출 알림 포함의 폼 구현",
        "details": "- 필드 검증 및 접근성(aria-invalid 등)\n- 외부 폼 서비스(Netlify Forms/Formspree) 또는 mailto 대안\n- 성공/실패 토스트 알림",
        "testStrategy": "",
        "status": "done",
        "dependencies": [],
        "priority": "medium",
        "subtasks": []
      },
      {
        "id": 9,
        "title": "SEO/메타/사이트맵 기본 설정",
        "description": "기본 메타 태그, OG/Twitter 카드, robots.txt, sitemap.xml",
        "details": "- 페이지별 title/description\n- 구조화 데이터(선택)\n- RSS(블로그 도입 시)",
        "testStrategy": "",
        "status": "done",
        "dependencies": [],
        "priority": "medium",
        "subtasks": []
      },
      {
        "id": 10,
        "title": "성능 최적화(이미지/코드 스플리팅)",
        "description": "Lighthouse 90+ 목표로 최적화",
        "details": "- 이미지 최적화(LQIP/blur)\n- 코드 스플리팅/지연 로딩\n- 폰트 최적화\n- 메트릭 측정(Web Vitals)",
        "testStrategy": "",
        "status": "done",
        "dependencies": [],
        "priority": "medium",
        "subtasks": []
      },
      {
        "id": 11,
        "title": "접근성 개선(A11y) 초안",
        "description": "색 대비, 키보드 탐색, aria 속성 점검",
        "details": "- 포커스 스타일\n- landmark/aria-label\n- 스크린리더 테스트 체크리스트",
        "testStrategy": "",
        "status": "done",
        "dependencies": [],
        "priority": "medium",
        "subtasks": []
      },
      {
        "id": 12,
        "title": "배포/CI 설정",
        "description": "Vercel/Netlify/GitHub Pages 중 선택하여 배포 파이프라인 구성",
        "details": "- 빌드 스크립트/환경변수\n- 프리뷰 배포(PR)\n- 캐시 최적화 설정",
        "testStrategy": "",
        "status": "done",
        "dependencies": [],
        "priority": "medium",
        "subtasks": []
      },
      {
        "id": 13,
        "title": "분석/모니터링 도입",
        "description": "Google Analytics/umami 등 간단한 트래킹",
        "details": "- 쿠키 배너(필요 시)\n- 이벤트 트래킹\n- 성능 로그",
        "testStrategy": "",
        "status": "cancelled",
        "dependencies": [],
        "priority": "medium",
        "subtasks": []
      },
      {
        "id": 14,
        "title": "블로그(선택) MVP",
        "description": "목록/상세, 태그/검색, 코드 하이라이트, RSS",
        "details": "- MD 렌더링\n- 구문 하이라이트\n- 태그/검색\n- OG 이미지",
        "testStrategy": "",
        "status": "done",
        "dependencies": [],
        "priority": "medium",
        "subtasks": []
      }
    ],
    "metadata": {
      "created": "2025-09-04T08:22:39.876Z",
      "description": "Default tasks context",
      "updated": "2025-09-19T06:38:07.611Z"
    }
  },
  "blog": {
    "tasks": [
      {
        "id": 1,
        "title": "Case Study: make-snmprec — Building realistic SNMP simulation data",
        "description": "Deep-dive post aligned to project. Cover data model, edge cases, validation, CLI UX, sample outputs; include diagrams and short demo GIF.",
        "details": "Outline → Draft → Review → Publish. Include TL;DR, internal links to Projects, metrics/screenshots. Target ≥ 600 words.",
        "testStrategy": "",
        "status": "done",
        "dependencies": [],
        "priority": "high",
        "subtasks": [
          {
            "id": 1,
            "title": "Outline",
            "description": "Create structured outline with sections, key points, and assets list.",
            "details": "Sections: TL;DR, Context, Problem, Approach, Data Model, Edge Cases, Validation, CLI UX, Results, Further Work. Assets: diagram, demo GIF, sample outputs.",
            "status": "done",
            "dependencies": [],
            "parentTaskId": 1
          },
          {
            "id": 2,
            "title": "Draft",
            "description": "Write the full draft (600–900 words) with examples and TL;DR.",
            "details": "Include code snippets for input/output, CLI examples, and Further Work section.",
            "status": "done",
            "dependencies": [],
            "parentTaskId": 1
          },
          {
            "id": 3,
            "title": "Review",
            "description": "Proofread content, verify links/code blocks, ensure TL;DR and Further Work present.",
            "details": "Checked internal relref to /projects/make-snmprec, headings, code fences, and Korean phrasing.",
            "status": "done",
            "dependencies": [],
            "parentTaskId": 1
          },
          {
            "id": 4,
            "title": "Publish",
            "description": "Ensure draft=false, commit & push, verify live URL and RSS inclusion.",
            "details": "Draft is already false. Live URL verified under /blog/make-snmprec-case-study/",
            "status": "done",
            "dependencies": [],
            "parentTaskId": 1
          }
        ]
      },
      {
        "id": 2,
        "title": "Case Study: system-Info-collector — Host observability from the ground up",
        "description": "Deep-dive into CPU/MEM/Disk collection and reliability under load; sampling, backoff/retry, CSV+DB dual logging, rotation.",
        "details": "Outline → Draft → Review → Publish. Architecture sketch + perf table; ≥ 600 words.",
        "testStrategy": "",
        "status": "done",
        "dependencies": [],
        "priority": "high",
        "subtasks": [
          {
            "id": 1,
            "title": "Outline",
            "description": "Create structured outline: TL;DR, Context, Problem, Architecture, Sampling, Backoff/Retry, Dual logging (CSV+DB), Rotation, Performance, Further Work.",
            "details": "Assets: architecture sketch (text), simple perf table.",
            "status": "done",
            "dependencies": [],
            "parentTaskId": 2
          },
          {
            "id": 2,
            "title": "Draft",
            "description": "Write the full draft (600–900 words) with examples, architecture details, and TL;DR section.",
            "details": "",
            "status": "done",
            "dependencies": [],
            "parentTaskId": 2
          },
          {
            "id": 3,
            "title": "Review",
            "description": "Proofread content, verify technical accuracy, ensure TL;DR and Further Work sections are present.",
            "details": "",
            "status": "done",
            "dependencies": [],
            "parentTaskId": 2
          },
          {
            "id": 4,
            "title": "Publish",
            "description": "Ensure draft=false, commit & push, verify live URL and RSS inclusion.",
            "details": "",
            "status": "done",
            "dependencies": [],
            "parentTaskId": 2
          }
        ]
      },
      {
        "id": 3,
        "title": "SNMP for backend engineers (MIB, OID, traps vs polling)",
        "description": "Evergreen primer with minimal Go examples; clarify core concepts and practical tips.",
        "details": "Outline → Draft → Review → Publish. Code snippets + diagrams; SEO-friendly headings.",
        "testStrategy": "",
        "status": "done",
        "dependencies": [],
        "priority": "medium",
        "subtasks": [
          {
            "id": 1,
            "title": "Outline",
            "description": "Create structured outline: TL;DR, Context, Problem, SNMP basics, MIB/OID concepts, Traps vs Polling, Go examples, Common pitfalls, Best practices, Further Work.",
            "details": "",
            "status": "done",
            "dependencies": [],
            "parentTaskId": 3
          },
          {
            "id": 2,
            "title": "Draft",
            "description": "Write the full draft (600–900 words) with Go examples, code snippets, and practical tips.",
            "details": "",
            "status": "done",
            "dependencies": [],
            "parentTaskId": 3
          },
          {
            "id": 3,
            "title": "Review",
            "description": "Proofread content, verify technical accuracy, ensure all Go examples work correctly.",
            "details": "",
            "status": "done",
            "dependencies": [],
            "parentTaskId": 3
          },
          {
            "id": 4,
            "title": "Publish",
            "description": "Ensure draft=false, commit & push, verify live URL and RSS inclusion.",
            "details": "",
            "status": "done",
            "dependencies": [],
            "parentTaskId": 3
          }
        ]
      },
      {
        "id": 4,
        "title": "Go benchmarking and profiling workflow you can actually use",
        "description": "Performance mindset: testing, bench, pprof, flamegraphs, common pitfalls.",
        "details": "Outline → Draft → Review → Publish. Include sample repo links + screenshots; reproducible steps.",
        "testStrategy": "",
        "status": "done",
        "dependencies": [],
        "priority": "high",
        "subtasks": [
          {
            "id": 1,
            "title": "Outline",
            "description": "Create structured outline: TL;DR, Context, Problem, Benchmarking basics, Profiling workflow, pprof usage, Flamegraphs, Common pitfalls, Performance optimization, Further Work.",
            "details": "",
            "status": "done",
            "dependencies": [],
            "parentTaskId": 4
          },
          {
            "id": 2,
            "title": "Draft",
            "description": "Write the full draft (600–900 words) with practical examples, code snippets, and reproducible steps.",
            "details": "",
            "status": "done",
            "dependencies": [],
            "parentTaskId": 4
          },
          {
            "id": 3,
            "title": "Review",
            "description": "Proofread content, verify technical accuracy, ensure all examples work correctly.",
            "details": "",
            "status": "done",
            "dependencies": [],
            "parentTaskId": 4
          },
          {
            "id": 4,
            "title": "Publish",
            "description": "Ensure draft=false, commit & push, verify live URL and RSS inclusion.",
            "details": "",
            "status": "done",
            "dependencies": [],
            "parentTaskId": 4
          }
        ]
      },
      {
        "id": 5,
        "title": "Logging strategy that scales from dev to prod",
        "description": "Operational logging: schema, levels, rotation, shipping to OpenSearch/ELK.",
        "details": "Outline → Draft → Review → Publish. JSON examples + pipeline sketch; link to related projects.",
        "testStrategy": "",
        "status": "done",
        "dependencies": [],
        "priority": "medium",
        "subtasks": [
          {
            "id": 1,
            "title": "Outline",
            "description": "Create structured outline: TL;DR, Context, Problem, Logging schema, Levels, Rotation, Shipping to OpenSearch/ELK, Performance considerations, Best practices, Further Work.",
            "details": "",
            "status": "done",
            "dependencies": [],
            "parentTaskId": 5
          },
          {
            "id": 2,
            "title": "Draft",
            "description": "Write the full draft (600–900 words) with JSON examples, pipeline sketches, and practical implementation details.",
            "details": "",
            "status": "done",
            "dependencies": [],
            "parentTaskId": 5
          },
          {
            "id": 3,
            "title": "Review",
            "description": "Proofread content, verify technical accuracy, ensure all JSON examples and pipeline sketches are correct.",
            "details": "",
            "status": "done",
            "dependencies": [],
            "parentTaskId": 5
          },
          {
            "id": 4,
            "title": "Publish",
            "description": "Ensure draft=false, commit & push, verify live URL and RSS inclusion.",
            "details": "",
            "status": "done",
            "dependencies": [],
            "parentTaskId": 5
          }
        ]
      },
      {
        "id": 6,
        "title": "Hugo+GitHub Pages: Subpath-safe internal links (relref/relURL)",
        "description": "Guide based on real fix: baseURL, relative/canonify, shortcodes, pitfalls.",
        "details": "Outline → Draft → Review → Publish. Before/after diffs + checklist.",
        "testStrategy": "",
        "status": "done",
        "dependencies": [],
        "priority": "high",
        "subtasks": [
          {
            "id": 1,
            "title": "Draft",
            "description": "Write the full draft covering baseURL, relative/canonify, shortcodes, and common pitfalls with before/after examples.",
            "details": "",
            "status": "done",
            "dependencies": [],
            "parentTaskId": 6
          },
          {
            "id": 2,
            "title": "Review",
            "description": "Proofread content, verify technical accuracy, ensure all examples work correctly.",
            "details": "",
            "status": "done",
            "dependencies": [],
            "parentTaskId": 6
          },
          {
            "id": 3,
            "title": "Publish",
            "description": "Ensure draft=false, commit & push, verify live URL and RSS inclusion.",
            "details": "",
            "status": "done",
            "dependencies": [],
            "parentTaskId": 6
          }
        ]
      },
      {
        "id": 7,
        "title": "Web Performance: Killing CLS on list pages (practical playbook)",
        "description": "How we eliminated CLS with min-height reservations, badge sizing, defer scripts.",
        "details": "Outline → Draft → Review → Publish. Include numbers before/after + code changes.",
        "testStrategy": "",
        "status": "cancelled",
        "dependencies": [],
        "priority": "high",
        "subtasks": []
      },
      {
        "id": 8,
        "title": "Accessibility: Keyboard-first navigation check in practice",
        "description": "Skip links, roles/ARIA, focus-visible, live regions; easy wins and checklist.",
        "details": "Outline → Draft → Review → Publish. Include checklist + diffs; reference site changes.",
        "testStrategy": "",
        "status": "done",
        "dependencies": [],
        "priority": "medium",
        "subtasks": [
          {
            "id": 1,
            "title": "Outline",
            "description": "Create structured outline: TL;DR, Context, Problem, Skip links, Focus management, ARIA roles, Keyboard navigation, Live regions, Checklist, Further Work",
            "details": "",
            "status": "done",
            "dependencies": [],
            "parentTaskId": 8
          },
          {
            "id": 2,
            "title": "Draft",
            "description": "Write the full draft (600–900 words) with practical examples, code snippets, and before/after comparisons",
            "details": "",
            "status": "done",
            "dependencies": [],
            "parentTaskId": 8
          },
          {
            "id": 3,
            "title": "Review",
            "description": "Proofread content, verify technical accuracy, ensure all examples work correctly",
            "details": "",
            "status": "done",
            "dependencies": [],
            "parentTaskId": 8
          },
          {
            "id": 4,
            "title": "Publish",
            "description": "Ensure draft=false, commit & push, verify live URL and RSS inclusion",
            "details": "",
            "status": "done",
            "dependencies": [],
            "parentTaskId": 8
          }
        ]
      },
      {
        "id": 9,
        "title": "Dynamic SVG Thumbnails with Hugo",
        "description": "ExecuteAsTemplate, brand tokens, fallbacks; visual consistency without external assets.",
        "details": "Outline → Draft → Review → Publish. Template snippet + examples; performance notes.",
        "testStrategy": "",
        "status": "done",
        "dependencies": [],
        "priority": "medium",
        "subtasks": [
          {
            "id": 1,
            "title": "Outline",
            "description": "Create structured outline: TL;DR, Context, Problem, ExecuteAsTemplate basics, Brand tokens, Fallback system, Performance optimization, Implementation examples, Further Work",
            "details": "",
            "status": "done",
            "dependencies": [],
            "parentTaskId": 9
          },
          {
            "id": 2,
            "title": "Draft",
            "description": "Write the full draft (600–900 words) with practical Hugo examples, template code, and performance considerations",
            "details": "",
            "status": "done",
            "dependencies": [],
            "parentTaskId": 9
          },
          {
            "id": 3,
            "title": "Review",
            "description": "Proofread content, verify technical accuracy, ensure all Hugo examples work correctly",
            "details": "",
            "status": "done",
            "dependencies": [],
            "parentTaskId": 9
          },
          {
            "id": 4,
            "title": "Publish",
            "description": "Ensure draft=false, commit & push, verify live URL and RSS inclusion",
            "details": "",
            "status": "done",
            "dependencies": [],
            "parentTaskId": 9
          }
        ]
      },
      {
        "id": 10,
        "title": "GitHub Actions pipeline for Hugo",
        "description": "Workflow file basics, cache, build flags, artifact tips; zero-downtime repo hygiene.",
        "details": "Outline → Draft → Review → Publish. Include workflow gist + tips.",
        "testStrategy": "",
        "status": "done",
        "dependencies": [],
        "priority": "medium",
        "subtasks": [
          {
            "id": 1,
            "title": "Outline",
            "description": "Create structured outline: TL;DR, Context, Problem, Workflow basics, Cache optimization, Build flags, Artifact management, Performance tips, Further Work",
            "details": "",
            "status": "done",
            "dependencies": [],
            "parentTaskId": 10
          },
          {
            "id": 2,
            "title": "Draft",
            "description": "Write the full draft (600–900 words) with practical GitHub Actions examples, workflow optimizations, and performance considerations",
            "details": "",
            "status": "done",
            "dependencies": [],
            "parentTaskId": 10
          },
          {
            "id": 3,
            "title": "Review",
            "description": "Proofread content, verify technical accuracy, ensure all GitHub Actions examples work correctly",
            "details": "",
            "status": "done",
            "dependencies": [],
            "parentTaskId": 10
          },
          {
            "id": 4,
            "title": "Publish",
            "description": "Ensure draft=false, commit & push, verify live URL and RSS inclusion",
            "details": "",
            "status": "done",
            "dependencies": [],
            "parentTaskId": 10
          }
        ]
      },
      {
        "id": 11,
        "title": "Go networking tips: timeouts, backoff, idempotency",
        "description": "Reliability patterns with context/deadlines/retries; brief circuit breaker mention.",
        "details": "Outline → Draft → Review → Publish. Minimal patterns + pitfalls.",
        "testStrategy": "",
        "status": "done",
        "dependencies": [],
        "priority": "medium",
        "subtasks": [
          {
            "id": 1,
            "title": "Outline",
            "description": "Create structured outline: TL;DR, Context, Problem, Timeout strategies, Backoff patterns, Idempotency, Circuit breaker basics, Error handling, Best practices, Further Work.",
            "details": "",
            "status": "done",
            "dependencies": [],
            "parentTaskId": 11
          },
          {
            "id": 2,
            "title": "Draft",
            "description": "Write the full draft (600–900 words) with practical Go examples, code snippets, and reliability patterns.",
            "details": "",
            "status": "done",
            "dependencies": [],
            "parentTaskId": 11
          },
          {
            "id": 3,
            "title": "Review",
            "description": "Proofread content, verify technical accuracy, ensure all Go examples work correctly.",
            "details": "",
            "status": "done",
            "dependencies": [],
            "parentTaskId": 11
          },
          {
            "id": 4,
            "title": "Publish",
            "description": "Ensure draft=false, commit & push, verify live URL and RSS inclusion.",
            "details": "",
            "status": "done",
            "dependencies": [],
            "parentTaskId": 11
          }
        ]
      },
      {
        "id": 12,
        "title": "API test harness in constrained networks (APITestProgram)",
        "description": "Offline/air-gapped testing: local fixtures, mock servers, reproducible scripts.",
        "details": "Outline → Draft → Review → Publish. Demo + scripts; link to project.",
        "testStrategy": "",
        "status": "cancelled",
        "dependencies": [],
        "priority": "high",
        "subtasks": []
      }
    ],
    "metadata": {
      "created": "2025-09-19T06:41:10.619Z",
      "updated": "2025-09-24T07:57:55.936Z",
      "description": "Tasks for blog content plan and execution"
    }
  }
}